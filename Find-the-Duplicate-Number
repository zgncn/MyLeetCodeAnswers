Given an array of integers nums containing n + 1 integers where each integer is in the range [1, n] inclusive.

There is only one repeated number in nums, return this repeated number.

You must solve the problem without modifying the array nums and uses only constant extra space.

 

Example 1:

Input: nums = [1,3,4,2,2]
Output: 2
Example 2:

Input: nums = [3,1,3,4,2]
Output: 3


SOLUTION

"""def solution(nums):
 for i in range(0,len(nums)):
        for j in range(0,len(nums)):
            if i==j:
                continue
            if nums[i]==nums[j]:
                return nums[i]
            
print(solution([3,4,5,2,6,4]))
"""

def floydSolution(nums):
    slowPointer=0
    fastPointer=0
    secondSlowPointer=0
    while True:
        slowPointer = nums[slowPointer]
        fastPointer = nums[nums[fastPointer]]

        if slowPointer == fastPointer:
            break


    while True:
        slowPointer = nums[slowPointer]
        secondSlowPointer=nums[secondSlowPointer]
        
        if slowPointer==secondSlowPointer:
            return slowPointer
        
print(floydSolution([5,3,2,1,4,3]))


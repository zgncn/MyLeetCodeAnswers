Given the head of a linked list, remove the nth node from the end of the list and return its head.

Example:
Input: head = [1,2,3,4,5], n = 2
Output: [1,2,3,5]
Example 2:

Input: head = [1], n = 1
Output: []
Example 3:

Input: head = [1,2], n = 1
Output: [1]

SOLUTION

class ListNode:
    def __init__(self, val=0, next=None):
        self.val = val
        self.next = next

class Solution:
    def removeNthFromEnd(self,head,n):
        rightPointer = head
        leftPointer = head
        while n > 0 and rightPointer:#right pointer boş olmadığı sürece
            rightPointer = rightPointer.next
            n = n-1
        while rightPointer and rightPointer.next:
            leftPointer = leftPointer.next
            rightPointer = rightPointer.next


        if leftPointer==head and not rightPointer:
            return head.next

        leftPointer.next = leftPointer.next.next

        return head
